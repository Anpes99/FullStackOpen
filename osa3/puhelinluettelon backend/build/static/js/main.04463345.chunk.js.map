{"version":3,"sources":["components/Addperson.js","components/ShowNumbers.js","components/FilterNumbers.js","services/PersonService.js","components/Notification.js","App.js","index.js"],"names":["Addperson","props","console","log","onSubmit","handleSubmitName","onChange","handleOnChangeName","value","newName","handleOnChangeNumber","newNumber","type","ShowNumbers","persons","newFilter","remove","setPersons","filter","person","name","toLowerCase","includes","map","number","onClick","window","confirm","id","p","FilterNumbers","handleFilterChange","newPerson","axios","post","get","delete","put","Notification","message","errorTrue","style","color","className","App","useState","setNewName","setNewNumber","setFilter","errorMessage","setErrorMessage","setErrorTrue","useEffect","PersonService","then","response","data","event","target","preventDefault","nameIn","index","length","find","catch","setTimeout","alert","concat","error","handleRemovePerson","a","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04463345.chunk.js","sourcesContent":["import React from 'react'\n\nconst Addperson = (props) =>{\n\nconsole.log('AddPerson props :  ....',{props})\nreturn(\n    <div>\n        <form onSubmit={props.handleSubmitName}>\n            <div>name: <input onChange={props.handleOnChangeName} value={props.newName} /></div>\n            <div>number: <input onChange={props.handleOnChangeNumber} value={props.newNumber} /></div>\n            <div><button type=\"submit\">add number</button></div>\n            \n        </form></div>\n)\n\n}\n\n\nexport default Addperson","import React from 'react'\n\nconst ShowNumbers = ({persons,newFilter,remove,setPersons}) => {\n\n\nreturn(\n<div>\n    {(persons?.filter(person => person.name.toLowerCase().includes((newFilter).toLowerCase()))).map(person =>\n             <div key={person.name}>\n                <p >{person.name} {person.number}</p>\n                    <button onClick={()=>\n                            {\n                                const confirmDelete = window.confirm(\"Do you really want to delete \"+ person.name+\" from the list?\")\n                                if (confirmDelete) {\n                                    const id=person.id\n                                    remove(person.id)\n                                setPersons(persons.filter(p=>p.id!==id))\n                                }\n                            }\n                        }\n                    >X</button>\n            </div>)}\n</div>)\n\n\n\n}\n\nexport default ShowNumbers","\nimport React from 'react'\n\nconst FilterNumbers = ({handleFilterChange,newFilter}) => {\n\n\nreturn(\n<div>\n<p>filter shown with </p><input value={newFilter} onChange={handleFilterChange}/>\n</div>)\n\n\n\n}\n\nexport default FilterNumbers","import React from 'react'\nimport axios from 'axios'\n\nconst create = (newPerson)=>{\n\nreturn axios.post('/api/persons',newPerson)\n\n}\n\nconst getAll = ()=>{\n\nreturn axios.get('/api/persons')\n\n}\n\nconst remove = (id)=>{\n    return axios.delete(`/api/persons/${id}`)\n\n}\n\nconst update = (name,number,id)=>{\n    \nreturn (axios.put(`/api/persons/${id}`,{name,number,id}))\n\n}\n\n\nexport default {create,getAll,remove,update}","import React from 'react'\nimport reactDom from 'react-dom'\n\nconst Notification = ({ message,errorTrue }) => {\n    if (message === null) {\n      return null\n    }\n  \n    const notificationStyle={\n\n        color:'green'\n    }\n\n    const errorStyle ={\n\n        color:'red'\n    }\n\n    return (\n      <div style={errorTrue?errorStyle:notificationStyle} className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\n  export default Notification","import React,{ useState,useEffect} from 'react'\nimport Addperson from './components/Addperson'\nimport ShowNumbers from './components/ShowNumbers'\nimport FilterNumbers from './components/FilterNumbers'\nimport PersonService from './services/PersonService'\nimport './index.css'\nimport Notification from './components/Notification'\n\nconst App = () => {\n    const [ persons, setPersons] = useState([]) \n    const [ newName, setNewName ] = useState('')\n    const [newNumber,setNewNumber] = useState('')\n    const [newFilter, setFilter] = useState('')\n    const [errorMessage, setErrorMessage] = useState(null)\n    const [errorTrue, setErrorTrue] = useState(false)\n\n    useEffect(() => {\n      console.log('effect')\n      PersonService\n        .getAll()\n        .then(response => {\n          setPersons([])\n          setPersons(response.data)\n        })\n    }, [])\n\n    const handleSubmitName = (event) =>{\n        event.preventDefault()\n        const newPerson ={name : newName, number:newNumber}\n        let nameIn=false\n        for (let index = 0; index < persons.length; index++) {\n            if (persons[index].name === newName){nameIn=true}\n            \n        }\n        if (nameIn){\n          const p= persons.find(p=>p.name ===newName)\n          if (p.number!==newNumber){\n              const replaceConfirm=window.confirm(\"This person is already added to phonebook Would you like to replace the number?\")\n              if (replaceConfirm){\n                        PersonService.update(p.name,newNumber,p.id)\n                                        .then(()=> {setErrorMessage( `Number changed succesfully`)} )\n                                        .catch(() => \n                                            {\n                                              setErrorTrue(true)\n                                              setErrorMessage(\"Error: That person was already deleted from the phonebook\")\n                                              setPersons(persons.filter(person=>person.id!==p.id))\n                                              }\n                                            )\n                        setTimeout(() => {\n                          setErrorMessage(null)\n                          setErrorTrue(false)\n                        }, 5000)\n                      }\n\n\n              else window.alert(`${newName} is already added to phonebook`)}  \n            }\n         \n        else {\n          PersonService\n                      .create(newPerson)\n                      .then(response=> \n                        {\n                        setPersons(persons.concat(response.data))\n                        setErrorMessage( `Person added succesfully`)\n                        setTimeout(() =>\n                         {\n                            setErrorMessage(null)\n                          }, 5000)\n                        })\n                      .catch(error=>{console.log(\"error in handleSubmitName\")})\n          \n      }\n    }\n\n    const handleOnChangeName = (event) =>{\n\n        setNewName(event.target.value)\n    }\n    const handleOnChangeNumber = (event) =>{\n\n        setNewNumber(event.target.value)\n    }\n    const handleFilterChange = (event) =>{\n\n        setFilter(event.target.value)\n        setPersons([])\n        PersonService\n        .getAll()\n        .then(response => {\n          setPersons([])\n          setPersons(response.data)\n        })\n    }\n\n    const handleRemovePerson = (id)=>{\n\n      const promise =PersonService.remove(id)\n      promise.then(()=> {\n                          \n      setErrorMessage(\n        `Person removed succesfully`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)})\n    }\n    \n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <Notification message={errorMessage} errorTrue={errorTrue}/>\n        <FilterNumbers handleFilterChange={handleFilterChange}/>\n                \n        <Addperson newName={newName} newNumber={newNumber} handleOnChangeName={handleOnChangeName} handleOnChangeNumber={handleOnChangeNumber} handleSubmitName={handleSubmitName} />\n               \n\n        {console.log('return')}\n        <h2>Numbers</h2>\n        <ShowNumbers persons={persons} remove={(id)=>{handleRemovePerson(id)}} newFilter={newFilter}  setPersons={(a)=>setPersons(a)}/>\n      </div>\n    )\n  \n  }\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}